<% content_for :head do  -%>
   <%= javascript_include_tag %w{
                swfupload/swfupload.js
                swfupload/swfupload.swfobject
                swfupload/swfupload.cookies
                swfupload/swfupload.queue
                swfupload/fileprogress.js
                swfupload/handlers.js }, :cache => 'swf_js_cached' %>
  <%= stylesheet_link_tag 'swfupload' %>

	<script type='text/javascript'>

	  var swfu;

		SWFUpload.onload = function () {
			var settings = {
			
				flash_url : '/swf/swfupload.swf',
				upload_url: '<%= new_upload_path_with_session_information(parent) %>',
			
				file_size_limit : "100 MB",
				file_types : "*.*",
				file_types_description : "All Files",
				file_upload_limit : 100,
				file_queue_limit : 0,
				post_params : {
  				authenticity_token : '<%= u form_authenticity_token.inspect -%>',
  			},
				custom_settings : {
					<%= 'progressTarget : "swf_fs_upload_progress",' if display_upload_indicators -%>
					cancelButtonId : "swf_cancel_button"
				},
				debug: false,

				// Button Settings
				button_image_url : "/images/SWFUploadButton.png", // Relative to the SWF file
				button_placeholder_id : "swf_button_holder",
				button_width: 61,
				button_height: 22,

				// The event handler functions are defined in handlers.js
				swfupload_loaded_handler : swfUploadLoaded,
				file_queued_handler : fileQueued,
				file_queue_error_handler : fileQueueError,
				file_dialog_complete_handler : fileDialogComplete,
				upload_start_handler : uploadStart,
				upload_progress_handler : uploadProgress,
				upload_error_handler : uploadError,
				upload_success_handler : uploadSuccess,
				upload_complete_handler : uploadComplete,
				queue_complete_handler : queueComplete,	// Queue plugin event

				// SWFObject settings
				minimum_flash_version : "9.0.28",
				swfupload_pre_load_handler : swfUploadPreLoad,
				swfupload_load_failed_handler : swfUploadLoadFailed
			};

			swfu = new SWFUpload(settings);
		}
		
	</script>
<% end -%>